function DSI_PGVSAASISIPGA_correlation
clc
%Brendon Bradley 31 Aug 2010

%Purpose: To look at the empirical correlations between various intensity
%measures, DSI, and PGV, SI, ASI, PGA, SA
nboot=100;

%get the observational data
data=observedIMintensities;

T=[0.01 0.02 0.03 0.04 0.05 0.075 0.1 0.15 0.2 0.25 0.3 0.4 0.5 0.75 1.0 1.5 2 3 4 5 7.5 10];

h_wait=waitbar(0,'Running..');
for i=1:length(data)
    waitbar(i/length(data));
    
    %get Metadata
    rec_num(i)=data(i,1);   EQ_num(i)=data(i,2);
    M=data(i,3);    faultprop.dip=data(i,4);  faultprop.AS=0;
    faultprop.rake=data(i,5);    mech=data(i,6);
    faultprop.Ztor=data(i,11); 
    %use Wells and Coppersmith 'All' to get rup width given Mw
    faultprop.W=10^(-1.01+0.32*M);
    if mech==0
        faultprop.faultstyle='strikeslip';
    elseif mech==1
        faultprop.faultstyle='normal';
    elseif mech==2
        faultprop.faultstyle='reverse';
    else
        faultprop.faultstyle='other';
    end
    
    Rjb=data(i,14); 
    Rrup=data(i,15);     siteprop.Rjb=Rjb; siteprop.Rx=Rjb;
    siteprop.V30=data(i,16); siteprop.V30measured=0; siteprop.Z1pt0=-1; siteprop.Zvs=-1;
    siteprop.orientation='average';
    
    %Intensity measures
    
%     ------------ASI----------------
    %get the predicted value of ASI using BA08
    IMR=@BooreAtkinson_2007_nga;
    [ASI_BA08(i),sigma_ASI_BA08(i,1:3)]=Bradleyetal_2008_ASI(M,Rjb,siteprop,faultprop,IMR);
    %get the predicted value using CY08
    IMR=@ChiouYoungs_2008_nga;
    [ASI_CY08(i),sigma_ASI_CY08(i,1:3)]=Bradleyetal_2008_ASI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using CB08
    IMR=@CampbellBozorgina_2007_nga;
    [ASI_CB08(i),sigma_ASI_CB08(i,1:3)]=Bradleyetal_2008_ASI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using AS08
    IMR=@AbrahamsonSilva_2008_nga;
    [ASI_AS08(i),sigma_ASI_AS08(i,1:3)]=Bradleyetal_2008_ASI(M,Rrup,siteprop,faultprop,IMR);
    %compute ASI for the GM record
    Sa_forASI=data(i,26:32); T_forASI=[0.1 0.15 0.2 0.25 0.3 0.4 0.5];
    ASI_observed(i)=trapz(T_forASI,Sa_forASI);
    %compute epsilonlnASI
    eps_lnASI_BA08(i)=(log(ASI_observed(i))-log(ASI_BA08(i)))/sigma_ASI_BA08(i,1);
    eps_lnASI_CY08(i)=(log(ASI_observed(i))-log(ASI_CY08(i)))/sigma_ASI_CY08(i,1);
    eps_lnASI_CB08(i)=(log(ASI_observed(i))-log(ASI_CB08(i)))/sigma_ASI_CB08(i,1);
    eps_lnASI_AS08(i)=(log(ASI_observed(i))-log(ASI_AS08(i)))/sigma_ASI_AS08(i,1);
    
    %------------SI----------------
    %get the predicted value of SI using BA08
    IMR=@BooreAtkinson_2007_nga; siteprop.g=981; %in cm/s2
    [SI_BA08(i),sigma_SI_BA08(i,1:3)]=Bradleyetal_2008_SI(M,Rjb,siteprop,faultprop,IMR);
    %get the predicted value using CY08
    IMR=@ChiouYoungs_2008_nga;
    [SI_CY08(i),sigma_SI_CY08(i,1:3)]=Bradleyetal_2008_SI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using CB08
    IMR=@CampbellBozorgina_2007_nga;
    [SI_CB08(i),sigma_SI_CB08(i,1:3)]=Bradleyetal_2008_SI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using AS08
    IMR=@AbrahamsonSilva_2008_nga;
    [SI_AS08(i),sigma_SI_AS08(i,1:3)]=Bradleyetal_2008_SI(M,Rrup,siteprop,faultprop,IMR);
    %compute SI for the GM record
    %get the Sa at T=2.5
    Sa_obs=data(i,20:41);
    Sa2pt5_obs = interp1(T,Sa_obs,2.5);
    Sa_forSI=[data(i,26:36) Sa2pt5_obs]; T_forSI=[0.1 0.15 0.2 0.25 0.3 0.4 0.5 0.75 1.0 1.5 2.0 2.5];
    Sv_forSI=(T_forSI/(2*pi)).*Sa_forSI*siteprop.g;
    SI_observed(i)=trapz(T_forSI,Sv_forSI);
    %compute epsilonlnSI
    eps_lnSI_BA08(i)=(log(SI_observed(i))-log(SI_BA08(i)))/sigma_SI_BA08(i,1);
    eps_lnSI_CY08(i)=(log(SI_observed(i))-log(SI_CY08(i)))/sigma_SI_CY08(i,1);
    eps_lnSI_CB08(i)=(log(SI_observed(i))-log(SI_CB08(i)))/sigma_SI_CB08(i,1);
    eps_lnSI_AS08(i)=(log(SI_observed(i))-log(SI_AS08(i)))/sigma_SI_AS08(i,1);
    
    %------------DSI----------------
    %get the predicted value of DSI using BA08
    IMR=@BooreAtkinson_2007_nga; siteprop.g=9.81; %in m/s2
    [DSI_BA08(i),sigma_DSI_BA08(i,1:3)]=Bradleyetal_2011_DSI(M,Rjb,siteprop,faultprop,IMR);
    %get the predicted value using CY08
    IMR=@ChiouYoungs_2008_nga;
    [DSI_CY08(i),sigma_DSI_CY08(i,1:3)]=Bradleyetal_2011_DSI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using CB08
    IMR=@CampbellBozorgina_2007_nga;
    [DSI_CB08(i),sigma_DSI_CB08(i,1:3)]=Bradleyetal_2011_DSI(M,Rrup,siteprop,faultprop,IMR);
    %get the predicted value using AS08
    IMR=@AbrahamsonSilva_2008_nga;
    [DSI_AS08(i),sigma_DSI_AS08(i,1:3)]=Bradleyetal_2011_DSI(M,Rrup,siteprop,faultprop,IMR);
    %compute DSI for the GM record
    Sa_forDSI=[data(i,32:39)]; T_forDSI=[0.5 0.75 1.0 1.5 2.0 3.0 4.0 5.0];
    Sd_forDSI=(T_forDSI/(2*pi)).^2.*Sa_forDSI*siteprop.g;
    DSI_observed(i)=trapz(T_forDSI,Sd_forDSI);
    %compute epsilonlnSI
    eps_lnDSI_BA08(i)=(log(DSI_observed(i))-log(DSI_BA08(i)))/sigma_DSI_BA08(i,1);
    eps_lnDSI_CY08(i)=(log(DSI_observed(i))-log(DSI_CY08(i)))/sigma_DSI_CY08(i,1);
    eps_lnDSI_CB08(i)=(log(DSI_observed(i))-log(DSI_CB08(i)))/sigma_DSI_CB08(i,1);
    eps_lnDSI_AS08(i)=(log(DSI_observed(i))-log(DSI_AS08(i)))/sigma_DSI_AS08(i,1);
    
%     ------------PGA----------------
    %get the predicted value of PGA using BA08
    siteprop.period=0;
    [PGA_BA08(i),sigma_PGA_BA08(i,1:3)]=BooreAtkinson_2007_nga(M,Rjb,siteprop,faultprop);
    %get the predicted value using CY08
    [PGA_CY08(i),sigma_PGA_CY08(i,1:3)]=ChiouYoungs_2008_nga(M,Rrup,siteprop,faultprop);
    %get the predicted value using CB08
    [PGA_CB08(i),sigma_PGA_CB08(i,1:3)]=CampbellBozorgina_2007_nga(M,Rrup,siteprop,faultprop);
    %get the predicted value using AS08
    [PGA_AS08(i),sigma_PGA_AS08(i,1:3)]=AbrahamsonSilva_2008_nga(M,Rrup,siteprop,faultprop);
    %get PGA for the GM record
    PGA_observed(i)=data(i,18);
    %compute epsilonlnPGA
    eps_lnPGA_BA08(i)=(log(PGA_observed(i))-log(PGA_BA08(i)))/sigma_PGA_BA08(i,1);
    eps_lnPGA_CY08(i)=(log(PGA_observed(i))-log(PGA_CY08(i)))/sigma_PGA_CY08(i,1);
    eps_lnPGA_CB08(i)=(log(PGA_observed(i))-log(PGA_CB08(i)))/sigma_PGA_CB08(i,1);
    eps_lnPGA_AS08(i)=(log(PGA_observed(i))-log(PGA_AS08(i)))/sigma_PGA_AS08(i,1);
    
    %------------PGV----------------
    %get the predicted value of PGV using BA08
    siteprop.period=-1;
    [PGV_BA08(i),sigma_PGV_BA08(i,1:3)]=BooreAtkinson_2007_nga(M,Rjb,siteprop,faultprop);
    %get the predicted value using CY08
    [PGV_CY08(i),sigma_PGV_CY08(i,1:3)]=ChiouYoungs_2008_nga(M,Rrup,siteprop,faultprop);
    %get the predicted value using CB08
    [PGV_CB08(i),sigma_PGV_CB08(i,1:3)]=CampbellBozorgina_2007_nga(M,Rrup,siteprop,faultprop);
    %get the predicted value using AS08
    [PGV_AS08(i),sigma_PGV_AS08(i,1:3)]=AbrahamsonSilva_2008_nga(M,Rrup,siteprop,faultprop);
    %get PGA for the GM record
    PGV_observed(i)=data(i,19);
    %compute epsilonlnPGA
    eps_lnPGV_BA08(i)=(log(PGV_observed(i))-log(PGV_BA08(i)))/sigma_PGV_BA08(i,1);
    eps_lnPGV_CY08(i)=(log(PGV_observed(i))-log(PGV_CY08(i)))/sigma_PGV_CY08(i,1);
    eps_lnPGV_CB08(i)=(log(PGV_observed(i))-log(PGV_CB08(i)))/sigma_PGV_CB08(i,1);
    eps_lnPGV_AS08(i)=(log(PGV_observed(i))-log(PGV_AS08(i)))/sigma_PGV_AS08(i,1);
    
    %------------SA----------------
    for j=1:length(T)
        siteprop.period=T(j);
        %get the predicted value of PGA using BA08
        [SA_BA08(i,j),sigma_SA_BA08(i,1:3,j)]=BooreAtkinson_2007_nga(M,Rjb,siteprop,faultprop);
        %get the predicted value using CY08
        [SA_CY08(i,j),sigma_SA_CY08(i,1:3,j)]=ChiouYoungs_2008_nga(M,Rrup,siteprop,faultprop);
        %get the predicted value using CB08
        [SA_CB08(i,j),sigma_SA_CB08(i,1:3,j)]=CampbellBozorgina_2007_nga(M,Rrup,siteprop,faultprop);
        %get the predicted value using AS08
        [SA_AS08(i,j),sigma_SA_AS08(i,1:3,j)]=AbrahamsonSilva_2008_nga(M,Rrup,siteprop,faultprop);
        %get PGA for the GM record
        SA_observed(i,j)=data(i,18+j);
        %if the usable frequency is ok compute residual else set residual =
        %-100;
        freq_min=data(i,17);
        T_max=1/freq_min;
        if T(j)<T_max
            %compute epsilonlnSA
            eps_lnSA_BA08(i,j)=(log(SA_observed(i,j))-log(SA_BA08(i,j)))/sigma_SA_BA08(i,1,j);
            eps_lnSA_CY08(i,j)=(log(SA_observed(i,j))-log(SA_CY08(i,j)))/sigma_SA_CY08(i,1,j);
            eps_lnSA_CB08(i,j)=(log(SA_observed(i,j))-log(SA_CB08(i,j)))/sigma_SA_CB08(i,1,j);
            eps_lnSA_AS08(i,j)=(log(SA_observed(i,j))-log(SA_AS08(i,j)))/sigma_SA_AS08(i,1,j);
        else
            eps_lnSA_BA08(i,j)=-100;
            eps_lnSA_CY08(i,j)=-100;
            eps_lnSA_CB08(i,j)=-100;
            eps_lnSA_AS08(i,j)=-100;
        end
    end
end

% %temp plots to check PGV calculations
% figure(1);
% ecdf(eps_lnPGA_BA08); hold on;
% ecdf(eps_lnPGA_CY08); 
% ecdf(eps_lnPGA_CB08);
% plot(norminv([0.01:0.01:0.99],0,1),[0.01:0.01:0.99],'r-');

%%%%%%%%%%%%%%%%%%%%%%end of computations %%%%%%%%%%%%%%%%%%%%

%processing of residuals
%1) Correlation between DSI and ASI
[rho_DSIASI_BA08] = bootstrp(nboot,@corr,eps_lnDSI_BA08,eps_lnASI_BA08);
[rho_DSIASI_CY08] = bootstrp(nboot,@corr,eps_lnDSI_CY08,eps_lnASI_CY08);
[rho_DSIASI_CB08] = bootstrp(nboot,@corr,eps_lnDSI_CB08,eps_lnASI_CB08);
[rho_DSIASI_AS08] = bootstrp(nboot,@corr,eps_lnDSI_AS08,eps_lnASI_AS08);

%2) Correlation between DSI and PGA
[rho_DSIPGA_BA08] = bootstrp(nboot,@corr,eps_lnDSI_BA08,eps_lnPGA_BA08);
[rho_DSIPGA_CY08] = bootstrp(nboot,@corr,eps_lnDSI_CY08,eps_lnPGA_CY08);
[rho_DSIPGA_CB08] = bootstrp(nboot,@corr,eps_lnDSI_CB08,eps_lnPGA_CB08);
[rho_DSIPGA_AS08] = bootstrp(nboot,@corr,eps_lnDSI_AS08,eps_lnPGA_AS08);

%2) Correlation between DSI and PGV
[rho_DSIPGV_BA08] = bootstrp(nboot,@corr,eps_lnDSI_BA08,eps_lnPGV_BA08);
[rho_DSIPGV_CY08] = bootstrp(nboot,@corr,eps_lnDSI_CY08,eps_lnPGV_CY08);
[rho_DSIPGV_CB08] = bootstrp(nboot,@corr,eps_lnDSI_CB08,eps_lnPGV_CB08);
[rho_DSIPGV_AS08] = bootstrp(nboot,@corr,eps_lnDSI_AS08,eps_lnPGV_AS08);

%2) Correlation between DSI with SI
[rho_DSISI_BA08] = bootstrp(nboot,@corr,eps_lnDSI_BA08,eps_lnSI_BA08);
[rho_DSISI_CY08] = bootstrp(nboot,@corr,eps_lnDSI_CY08,eps_lnSI_CY08);
[rho_DSISI_CB08] = bootstrp(nboot,@corr,eps_lnDSI_CB08,eps_lnSI_CB08);
[rho_DSISI_AS08] = bootstrp(nboot,@corr,eps_lnDSI_AS08,eps_lnSI_AS08);

%4) Correaltion between DSI with SA(T)
for i=1:length(T)
    %need to check if each residual is not -100 indicating above fmin
    k=0;
    for j=1:length(eps_lnASI_BA08)  %will be same for both BA08 and CY08 so dont need to check twice
        if eps_lnSA_BA08(j,i)~=-100
            k=k+1;
            eps_lnDSI_BA08_Fok(k)=eps_lnDSI_BA08(j);
            eps_lnSA_BA08_Fok(k)=eps_lnSA_BA08(j,i);
            eps_lnDSI_CY08_Fok(k)=eps_lnDSI_CY08(j);
            eps_lnSA_CY08_Fok(k)=eps_lnSA_CY08(j,i);
            eps_lnDSI_CB08_Fok(k)=eps_lnDSI_CB08(j);
            eps_lnSA_CB08_Fok(k)=eps_lnSA_CB08(j,i);
            eps_lnDSI_AS08_Fok(k)=eps_lnDSI_AS08(j);
            eps_lnSA_AS08_Fok(k)=eps_lnSA_AS08(j,i);
        end
    end
    %DSI, SA(T)
    [rho_DSISA_BA08(:,i)] = bootstrp(nboot,@corr,eps_lnDSI_BA08_Fok,eps_lnSA_BA08_Fok);
    [rho_DSISA_CY08(:,i)] = bootstrp(nboot,@corr,eps_lnDSI_CY08_Fok,eps_lnSA_CY08_Fok);
    [rho_DSISA_CB08(:,i)] = bootstrp(nboot,@corr,eps_lnDSI_CB08_Fok,eps_lnSA_CB08_Fok);
    [rho_DSISA_AS08(:,i)] = bootstrp(nboot,@corr,eps_lnDSI_AS08_Fok,eps_lnSA_AS08_Fok);
end

%Transformation of rho to fisher z values
z_rho_DSIASI(:,1)=FisherZTransformation(rho_DSIASI_BA08);
z_rho_DSIASI(:,2)=FisherZTransformation(rho_DSIASI_CY08);
z_rho_DSIASI(:,3)=FisherZTransformation(rho_DSIASI_CB08);
z_rho_DSIASI(:,4)=FisherZTransformation(rho_DSIASI_AS08);

z_rho_DSIPGA(:,1)=FisherZTransformation(rho_DSIPGA_BA08);
z_rho_DSIPGA(:,2)=FisherZTransformation(rho_DSIPGA_CY08);
z_rho_DSIPGA(:,3)=FisherZTransformation(rho_DSIPGA_CB08);
z_rho_DSIPGA(:,4)=FisherZTransformation(rho_DSIPGA_AS08);

z_rho_DSIPGV(:,1)=FisherZTransformation(rho_DSIPGV_BA08);
z_rho_DSIPGV(:,2)=FisherZTransformation(rho_DSIPGV_CY08);
z_rho_DSIPGV(:,3)=FisherZTransformation(rho_DSIPGV_CB08);
z_rho_DSIPGV(:,4)=FisherZTransformation(rho_DSIPGV_AS08);

z_rho_DSISI(:,1)=FisherZTransformation(rho_DSISI_BA08);
z_rho_DSISI(:,2)=FisherZTransformation(rho_DSISI_CY08);
z_rho_DSISI(:,3)=FisherZTransformation(rho_DSISI_CB08);
z_rho_DSISI(:,4)=FisherZTransformation(rho_DSISI_AS08);

z_rho_DSIASI_all = [z_rho_DSIASI(:,1)' z_rho_DSIASI(:,2)' z_rho_DSIASI(:,3)' z_rho_DSIASI(:,4)']';
z_rho_DSIPGA_all = [z_rho_DSIPGA(:,1)' z_rho_DSIPGA(:,2)' z_rho_DSIPGA(:,3)' z_rho_DSIPGA(:,4)']';
z_rho_DSIPGV_all = [z_rho_DSIPGV(:,1)' z_rho_DSIPGV(:,2)' z_rho_DSIPGV(:,3)' z_rho_DSIPGV(:,4)']';
z_rho_DSISI_all = [z_rho_DSISI(:,1)' z_rho_DSISI(:,2)' z_rho_DSISI(:,3)' z_rho_DSISI(:,4)']';

for i=1:length(T)
    z_rho_DSISA(:,i,1)=FisherZTransformation(rho_DSISA_BA08(:,i));
    z_rho_DSISA(:,i,2)=FisherZTransformation(rho_DSISA_CY08(:,i));
    z_rho_DSISA(:,i,3)=FisherZTransformation(rho_DSISA_CB08(:,i));
    z_rho_DSISA(:,i,4)=FisherZTransformation(rho_DSISA_AS08(:,i));
    
    z_rho_DSISA_all(:,i) = [z_rho_DSISA(:,i,1)' z_rho_DSISA(:,i,2)' z_rho_DSISA(:,i,3)' z_rho_DSISA(:,i,4)']';
end



%%%%%%%%%%%%%%%%%%%%%%%%%%
%outputting of results
median_rho_DSIASI=InvFisherZTransformation(mean(z_rho_DSIASI,1));
median_rho_DSIPGA=InvFisherZTransformation(mean(z_rho_DSIPGA,1));
median_rho_DSIPGV=InvFisherZTransformation(mean(z_rho_DSIPGV,1));
median_rho_DSISI=InvFisherZTransformation(mean(z_rho_DSISI,1));

median_rho_PGVASI_all=InvFisherZTransformation(mean(z_rho_PGVASI_all));
median_rho_PGVPGA_all=InvFisherZTransformation(mean(z_rho_PGVPGA_all));
median_rho_PGVSI_all=InvFisherZTransformation(mean(z_rho_PGVSI_all));

std_z_PGVASI=std(z_rho_PGVASI_all);
std_z_PGVPGA=std(z_rho_PGVPGA_all);
std_z_PGVSI=std(z_rho_PGVSI_all);

for i=1:length(T)
    median_rho_PGVSA(i,:)=InvFisherZTransformation(mean(z_rho_PGVSA(:,i,:),1));
    median_rho_PGVSA_all(i)=InvFisherZTransformation(mean(z_rho_PGVSA_all(:,i),1));
    std_z_PGVSA(i)=std(z_rho_PGVSA_all(:,i));
end



fprintf('Results of correlation analyses \n');
fprintf('\n');
fprintf('-----------------------  Median correlations   ---------------------- | ----------Overall   -------\n');
fprintf('             BA08   |     CY08      |     CY08      |     AS08      |   median     |  Z std   \n');
fprintf('PGV,ASI    %6.3f       %6.3f       %6.3f      %6.3f      |     %6.3f       %6.3f      \n',median_rho_PGVASI,median_rho_PGVASI_all,std_z_PGVASI);
fprintf('PGV,PGA    %6.3f       %6.3f       %6.3f      %6.3f      |     %6.3f       %6.3f      \n',median_rho_PGVPGA,median_rho_PGVPGA_all,std_z_PGVPGA);
fprintf('PGV,SI     %6.3f       %6.3f       %6.3f      %6.3f      |     %6.3f       %6.3f      \n',median_rho_PGVSI,median_rho_PGVSI_all,std_z_PGVSI);
fprintf('\n');
fprintf('              median PGV - SA correlation       |                          |  \n');
fprintf('T      |    BA08  |    CY08 |    CB08 |    AS08 |   median   |  Z variance |  \n');
for i=1:length(T)
fprintf('%6.3f     %6.3f   %6.3f   %6.3f   %6.3f   %6.3f   %6.3f   \n',...
                                                        T(i),median_rho_PGVSA(i,:),median_rho_PGVSA_all(i),std_z_PGVSA(i));
end
fprintf('------------------------------------- \n');

%plotting
%PGV with ASI,SI, PGA correlations
fig1=figure(1);
axes('Parent',gcf,'FontSize',16);
subplot(131);
boxplot([rho_PGVASI_BA08 rho_PGVASI_CY08 rho_PGVASI_CB08 rho_PGVASI_AS08],'labels',{'BA08';'CY08';'CB08';'AS08'});
h = findobj(gca,'Type','Line'); for i=1:length(h); set(h(i),'LineWidth',2); end;
ylabel('Corr coeff, \rho_{lnPGV,lnASI}'); grid on;
subplot(132);
boxplot([rho_PGVPGA_BA08 rho_PGVPGA_CY08 rho_PGVPGA_CB08 rho_PGVPGA_AS08],'labels',{'BA08';'CY08';'CB08';'AS08'});
h = findobj(gca,'Type','Line'); for i=1:length(h); set(h(i),'LineWidth',2); end;
ylabel('Corr coeff, \rho_{lnPGV,lnPGA}'); grid on;
subplot(133);
boxplot([rho_PGVSI_BA08 rho_PGVSI_CY08 rho_PGVSI_CB08 rho_PGVSI_AS08],'labels',{'BA08';'CY08';'CB08';'AS08'});
h = findobj(gca,'Type','Line'); for i=1:length(h); set(h(i),'LineWidth',2); end;
ylabel('Corr coeff, \rho_{lnPGV,lnSI}'); grid on;
set(gcf,'units','normalized'); set(gcf,'Position',[0.05 0.05 0.9 0.35]);

%PGV correlation with SA
fig2=figure(2);
axes('Parent',gcf,'FontSize',16);
semilogx(T,mean(rho_PGVSA_BA08,1),'LineWidth',3,'LineStyle','-','Color',[1 0 0]); hold on;
semilogx(T,prctile(rho_PGVSA_BA08,[5 95],1)','LineWidth',2,'LineStyle','--','Color',[1 0 0]);
semilogx(T,mean(rho_PGVSA_CY08,1),'LineWidth',3,'LineStyle','-','Color',[0 1 0]);
semilogx(T,prctile(rho_PGVSA_CY08,[5 95],1)','LineWidth',2,'LineStyle','--','Color',[0 1 0]);
semilogx(T,mean(rho_PGVSA_CB08,1),'LineWidth',3,'LineStyle','-','Color',[0 0 1]);
semilogx(T,prctile(rho_PGVSA_CB08,[5 95],1)','LineWidth',2,'LineStyle','--','Color',[0 0 1]);
semilogx(T,mean(rho_PGVSA_AS08,1),'LineWidth',3,'LineStyle','-','Color',[0.5 0.5 0.5]);
semilogx(T,prctile(rho_PGVSA_AS08,[5 95],1)','LineWidth',2,'LineStyle','--','Color',[0.5 0.5 0.5]);
ylabel('Corr coeff, \rho_{lnPGVSI,lnSA}'); xlabel('Period, T (s)'); grid on;
set(gcf,'units','normalized'); set(gcf,'Position',[0.05 0.05 0.5 0.4]);

%show adequacy of z having a normal distribution
z_rho_ij=z_rho_PGVASI_all; %which is considered

cdf=0.01:0.01:0.99;
X=norminv(cdf,mean(z_rho_ij),std(z_rho_ij));

alpha=0.1;
N=length(z_rho_ij);
emp_cdf=1/(N+1):1/(N+1):N/(N+1);
[H,P,KSSTAT,CV] = kstest(sort(z_rho_ij),[sort(z_rho_ij) emp_cdf'],alpha); 

fig4=figure(4);
axes('Parent',gcf,'FontSize',16);
plot(X,cdf,'LineWidth',3,'LineStyle','-','Color',[1 0 0]); hold on; 
plot(X,cdf+CV,'Color',[1 0 0],'LineWidth',2,'LineStyle','--'); 
plot(X,cdf-CV,'Color',[1 0 0],'LineWidth',2,'LineStyle','--');
plot(sort(z_rho_ij),emp_cdf,'LineWidth',3,'LineStyle','-','Color',[0 0 1]);
xlabel('Fisher Z value'); ylabel('Cumulative probability');
ylim([0 1]);
grid on;

close(h_wait)
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [z]=FisherZTransformation(rho)
%Computes the Fisher Z Transformation of the correlation

z=0.5*log((1+rho)./(1-rho));

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [rho]=InvFisherZTransformation(z)
%Computes the Inverse Fisher Z Transformation of the correlation

rho=(exp(2*z)-1)./(1+exp(2*z));

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
